//optimized solution set matrix zero time complexity = O(m*n) space complexity = O(1)

class Solution {
    public void setZeroes(int[][] matrix) {
        int m = matrix.length;
        int n = matrix[0].length;
        boolean firstRowZero = false;
        boolean firstColZero = false;
        
        //check if first row has zero
        for(int j=0; j<n; j++){
            if(matrix[0][j]==0){
                firstRowZero = true;
            }
        }
        //check if first column has zero
        for(int i=0; i<m; i++){
            if(matrix[i][0]==0){
                firstColZero = true;
            }
        }
        //set first colum and row as a marker
        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                if(matrix[i][j]==0){
                    matrix[0][j]=0;
                    matrix[i][0]=0;
                }
            }
        }
        //put the zero on tle left cells
        for(int i=1; i<m; i++){
            for(int j=1; j<n; j++){
                if(matrix[0][j]==0||matrix[i][0]==0){
                    matrix[i][j]=0;
                }
            }
        }
        //set zeros on the first row and first column
        if(firstRowZero==true){
            for(int j=0; j<n; j++){
                matrix[0][j]=0;
            }
        }
        if(firstColZero==true){
            for(int i=0; i<m; i++){
                matrix[i][0]=0;
            }
        }

    }
}
